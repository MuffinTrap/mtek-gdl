<?xml version="1.0" encoding="utf-8"?>
<CodeBlocks_compiler_options>
  <Program name="C" value="powerpc-eabi-gcc.exe"/>
  <Program name="CPP" value="powerpc-eabi-g++.exe"/>
  <Program name="LD" value="powerpc-eabi-g++.exe"/>
  <Program name="DBGconfig" value=""/>
  <Program name="LIB" value="powerpc-eabi-ar.exe"/>
  <Program name="WINDRES" value=""/>
  <Program name="MAKE" value="make.exe"/>
  <Switch name="includeDirs" value="-I"/>
  <Switch name="libDirs" value="-L"/>
  <Switch name="linkLibs" value="-l"/>
  <Switch name="defines" value="-D"/>
  <Switch name="genericSwitch" value="-"/>
  <Switch name="objectExtension" value="o"/>
  <Switch name="forceFwdSlashes" value="false"/>
  <Switch name="forceLinkerUseQuotes" value="false"/>
  <Switch name="forceCompilerUseQuotes" value="false"/>
  <Switch name="needDependencies" value="true"/>
  <Switch name="logging" value="default"/>
  <Switch name="libPrefix" value="lib"/>
  <Switch name="libExtension" value="a"/>
  <Switch name="linkerNeedsLibPrefix" value="false"/>
  <Switch name="linkerNeedsLibExtension" value="false"/>
  <Switch name="linkerNeedsPathResolved" value="false"/>
  <Switch name="supportsPCH" value="false"/>
  <Switch name="PCHExtension" value="gch"/>
  <Switch name="UseFlatObjects" value="false"/>
  <Switch name="UseFullSourcePaths" value="false"/>
  <Switch name="includeDirSeparator" value=" "/>
  <Switch name="libDirSeparator" value=" "/>
  <Switch name="objectSeparator" value=" "/>
  <Switch name="statusSuccess" value="0"/>
  <Switch name="Use83Paths" value="false"/>
  <Option name="Produce debugging symbols" option="-g" category="Debugging" checkAgainst="-O -O1 -O2 -O3 -Os" checkMessage="You have optimizations enabled. This is Not A Good Thing(tm) when producing debugging symbols..." supersedes="-s"/>
  <Option name="Profile code when executed" option="-pg" category="Profiling" additionalLibs="-pg -lgmon" supersedes="-s"/>
  <Option name="In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++" option="-ansi" category="Warnings"/>
  <Option name="Enable all common compiler warnings (overrides many other settings)" option="-Wall" category="Warnings" supersedes="-w"/>
  <Option name="Enable extra compiler warnings" option="-Wextra" category="Warnings"/>
  <Option name="Stop compiling after first error" option="-Wfatal-errors" category="Warnings"/>
  <Option name="Inhibit all warning messages" option="-w" category="Warnings" supersedes="-Wall"/>
  <Option name="Have g++ follow the 1998 ISO C++ language standard" option="-std=c++98" category="Warnings" supersedes="-std=c++0x -std=c++11"/>
  <Option name="Have g++ follow the coming C++0x ISO C++ language standard" option="-std=c++0x" category="Warnings" supersedes="-std=c++98 -std=c++11"/>
  <Option name="Have g++ follow the C++11 ISO C++ language standard" option="-std=c++11" category="Warnings" supersedes="-std=c++98 -std=c++0x"/>
  <Option name="Warn if '0' is used as a null pointer constant" option="-Wzero-as-null-pointer-constant" category="Warnings"/>
  <Option name="Enable warnings demanded by strict ISO C and ISO C++" option="-pedantic" category="Warnings"/>
  <Option name="Treat as errors the warnings demanded by strict ISO C and ISO C++" option="-pedantic-errors" category="Warnings"/>
  <Option name="Warn if main() is not conformant" option="-Wmain" category="Warnings"/>
  <Option name="Output an error if same variable is declared without extern in different modules" option="-fno-common" category="General Options"/>
  <Option name="Save intermediate files in the build directory" option="-save-temps" category="General Options"/>
  <Option name="only search library directories explicitly specified on the command line" option="-nostdlib" category="Linker and startup code"/>
  <Option name="Strip all symbols from binary (minimizes size)" category="Optimization" additionalLibs="-s" supersedes="-g -ggdb -pg"/>
  <Option name="Optimize generated code (for speed)" option="-O" category="Optimization" checkAgainst="-g -ggdb" checkMessage="You have debugging symbols enabled. This is Not A Good Thing(tm) when optimizing..." supersedes="-O1 -O2 -O3 -Os"/>
  <Option name="Optimize more (for speed)" option="-O1" category="Optimization" checkAgainst="-g -ggdb" checkMessage="You have debugging symbols enabled. This is Not A Good Thing(tm) when optimizing..." supersedes="-O -O2 -O3 -Os"/>
  <Option name="Optimize even more (for speed)" option="-O2" category="Optimization" checkAgainst="-g -ggdb" checkMessage="You have debugging symbols enabled. This is Not A Good Thing(tm) when optimizing..." supersedes="-O -O1 -O3 -Os"/>
  <Option name="Optimize fully (for speed)" option="-O3" category="Optimization" checkAgainst="-g -ggdb" checkMessage="You have debugging symbols enabled. This is Not A Good Thing(tm) when optimizing..." supersedes="-O -O1 -O2 -Os"/>
  <Option name="Optimize generated code (for size)" option="-Os" category="Optimization" checkAgainst="-g -ggdb" checkMessage="You have debugging symbols enabled. This is Not A Good Thing(tm) when optimizing..." supersedes="-O -O1 -O2 -O3"/>
  <Option name="Expensive optimizations" option="-fexpensive-optimizations" category="Optimization" checkAgainst="-g -ggdb" checkMessage="You have debugging symbols enabled. This is Not A Good Thing(tm) when optimizing..."/>
  <Command name="CompileObject" value="$compiler $options $includes -c $file -o $object"/>
  <Command name="CompileObject" value="swig -c++ -lua $includes -o $file_dir/$file_name.cpp $file" ext="i" gen="$file_dir/$file_name.cpp"/>
  <Command name="CompileObject" value="ragel $file -C -L -o $file.cpp" ext="rl" gen="$file.cpp"/>
  <Command name="CompileObject" value="bison -v -d $file -o $file_dir/$file_name.parser.cc" ext="y" gen="$file_dir/$file_name.parser.cc;$file_dir/$file_name.parser.hh"/>
  <Command name="CompileObject" value="flex -o$file_dir/$file_name.scanner.cc $file" ext="l" gen="$file_dir/$file_name.scanner.cc"/>
  <Command name="CompileObject" value="cython $file" ext="pyx" gen="$file_dir/$file_name.c"/>
  <Command name="CompileObject" value="lzz $includes $file" ext="lzz" gen="$file_dir/$file_name.cpp;$file_dir/$file_name.h"/>
  <Command name="GenDependencies" value="$compiler -MM $options -MF $dep_object -MT $object $includes $file"/>
  <Command name="CompileResource" value="$rescomp $res_includes -J rc -O coff -i $file -o $resource_output"/>
  <Command name="LinkExe" value="$linker $libdirs -o $exe_output $link_objects $link_resobjects $link_options $libs -mwindows"/>
  <Command name="LinkConsoleExe" value="$linker $libdirs -o $exe_output $link_objects $link_resobjects $link_options $libs"/>
  <Command name="LinkDynamic" value="$linker -shared -Wl,--output-def=$def_output -Wl,--out-implib=$static_output -Wl,--dll $libdirs $link_objects $link_resobjects -o $exe_output $link_options $libs"/>
  <Command name="LinkStatic" value="$lib_linker -rs $static_output $link_objects"/>
  <Command name="LinkNative" value="$linker $libdirs -o $exe_output $link_objects $link_resobjects $link_options $libs"/>
  <RegEx name="Fatal error" type="error" msg="1">
    <![CDATA[FATAL:[ \t]*(.*)]]>
  </RegEx>
  <RegEx name="'In function...' info" type="info" msg="2" file="1">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):[ \t]+([iI]n ([cC]lass|[cC]onstructor|[dD]estructor|[fF]unction|[mM]ember [fF]unction).*)]]>
  </RegEx>
  <RegEx name="'Skipping N instantiation contexts' info (2)" type="info" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t]+(\[[ \t]+[Ss]kipping [0-9]+ instantiation contexts[ \t]+\])]]>
  </RegEx>
  <RegEx name="'Skipping N instantiation contexts' info" type="info" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[ \t]+(\[[ \t]+[Ss]kipping [0-9]+ instantiation contexts[ \t]+\])]]>
  </RegEx>
  <RegEx name="'In instantiation' warning" type="warning" msg="2" file="1">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):[ \t]+([Ii]n [Ii]nstantiation.*)]]>
  </RegEx>
  <RegEx name="'Required from' warning" type="warning" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t]+([Rr]equired from.*)]]>
  </RegEx>
  <RegEx name="'Instantiated from' info (2)" type="info" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t]+([Ii]nstantiated from .*)]]>
  </RegEx>
  <RegEx name="'Instantiated from' info" type="info" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[ \t]+([Ii]nstantiated from .*)]]>
  </RegEx>
  <RegEx name="Resource compiler error" type="error" msg="3" file="1" line="2">
    <![CDATA[windres.exe:[ \t]([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[ \t](.*)]]>
  </RegEx>
  <RegEx name="Resource compiler error (2)" type="error" msg="1">
    <![CDATA[windres.exe:[ \t](.*)]]>
  </RegEx>
  <RegEx name="Preprocessor warning" type="warning" msg="4" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):([0-9]+):[ \t]([Ww]arning:[ \t].*)]]>
  </RegEx>
  <RegEx name="Compiler note (2)" type="info" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t]([Nn]ote:[ \t].*)]]>
  </RegEx>
  <RegEx name="Compiler note" type="info" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[ \t]([Nn]ote:[ \t].*)]]>
  </RegEx>
  <RegEx name="General note" type="info" msg="1">
    <![CDATA[([Nn]ote:[ \t].*)]]>
  </RegEx>
  <RegEx name="Preprocessor error" type="error" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t](.*)]]>
  </RegEx>
  <RegEx name="Compiler warning (2)" type="warning" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t]([Ww]arning:[ \t].*)]]>
  </RegEx>
  <RegEx name="Compiler warning" type="warning" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[ \t]([Ww]arning:[ \t].*)]]>
  </RegEx>
  <RegEx name="Undefined reference (2)" type="error" msg="3" file="1" line="2">
    <![CDATA[[][{}() \t#%$~[:alnum:]&_:+/\.-]+\.o:([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[ \t](undefined reference.*)]]>
  </RegEx>
  <RegEx name="Compiler error (2)" type="error" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t](.*)]]>
  </RegEx>
  <RegEx name="Compiler error" type="error" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[ \t](.*)]]>
  </RegEx>
  <RegEx name="Linker warning" type="warning" msg="2" file="1">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):\(\.text\+[0-9a-fA-FxX]+\):[ \t]([Ww]arning:[ \t].*)]]>
  </RegEx>
  <RegEx name="Linker error" type="error" msg="3" file="1" line="2">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):([0-9]+):[0-9]+:[ \t](.*)]]>
  </RegEx>
  <RegEx name="Linker error (2)" type="error" msg="2" file="1">
    <![CDATA[[][{}() \t#%$~[:alnum:]&_:+/\.-]+\(.text\+[0-9A-Za-z]+\):([ \tA-Za-z0-9_:+/\.-]+):[ \t](.*)]]>
  </RegEx>
  <RegEx name="Linker error (3)" type="error" msg="2" file="1">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):\(\.text\+[0-9a-fA-FxX]+\):(.*)]]>
  </RegEx>
  <RegEx name="Linker error (lib not found)" type="error" msg="2" file="1">
    <![CDATA[.*(ld.*):[ \t](cannot find.*)]]>
  </RegEx>
  <RegEx name="Linker error (cannot open output file)" type="error" msg="2;3" file="1">
    <![CDATA[.*(ld.*):[ \t](cannot open output file.*):[ \t](.*)]]>
  </RegEx>
  <RegEx name="Linker error (unrecognized option)" type="error" msg="2" file="1">
    <![CDATA[.*(ld.*):[ \t](unrecognized option.*)]]>
  </RegEx>
  <RegEx name="Compiler error (unrecognized option)" type="error" msg="1">
    <![CDATA[.*cc.*:[ \t]([Uu]nrecognized.*option.*)]]>
  </RegEx>
  <RegEx name="No such file or directory" type="error" msg="2" file="1">
    <![CDATA[.*:(.*):[ \t](No such file or directory.*)]]>
  </RegEx>
  <RegEx name="Undefined reference" type="error" msg="2" file="1">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):[ \t](undefined reference.*)]]>
  </RegEx>
  <RegEx name="General warning" type="warning" msg="1">
    <![CDATA[([Ww]arning:[ \t].*)]]>
  </RegEx>
  <RegEx name="Auto-import info" type="info" msg="1">
    <![CDATA[([Ii]nfo:[ \t].*)\(auto-import\)]]>
  </RegEx>
  <RegEx name="Linker warning (different sized sections)" type="warning" msg="2" file="1">
    <![CDATA[([][{}() \t#%$~[:alnum:]&_:+/\.-]+):[ \t]+(duplicate section.*has different size)]]>
  </RegEx>
  <Sort CFlags="-std=c90 -std=c89 -std=iso9899:1990 -std=iso9899:199409 -std=c99 -std=c9x -std=iso9899:1999 -std=iso9899:199x -std=c11 -std=c1x -std=iso9899:2011 -std=gnu90 -std=gnu89 -std=gnu99 -std=gnu9x -std=gnu11 -std=gnu1x"/>
  <Sort CPPFlags="-std=c++98 -std=c++03 -std=gnu++98 -std=gnu++03 -std=c++11 -std=c++0x -std=gnu++11 -std=gnu++0x -std=c++1y -std=gnu++1y -static-libstdc++ -shared-libstdc++ -fpermissive -fdeduce-init-list -fcheck-new -fstrict-enums -Weffc++ -Wctor-dtor-privacy -Wdelete-non-virtual-dtor -Wliteral-suffix -Wc++11-compat -Wnoexcept -Wnon-virtual-dtor -Wreorder -Wstrict-null-sentinel -Wno-non-template-friend -Wnon-template-friend -Wold-style-cast -Woverloaded-virtual -Wno-pmf-conversions -Wsign-promo"/>
</CodeBlocks_compiler_options>
